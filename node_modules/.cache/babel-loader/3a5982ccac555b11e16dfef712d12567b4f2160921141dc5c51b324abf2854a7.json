{"ast":null,"code":"var _jsxFileName = \"E:\\\\Aa Seven Mentor\\\\Web Development Onkar Nagarkar\\\\React\\\\Book Management System\\\\book_managment_system\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Book from './components/Book';\nimport AddBook from './components/AddBook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [books, setBooks] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:8000/books').then(response => {\n      return response.json();\n    }).then(data => {\n      setBooks(data);\n    });\n  });\n  function handleRemove(id) {\n    fetch(`http://localhost:8000/books/${id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      let newBooks = books.filter(element => {\n        return element.id !== id;\n      });\n      setBooks(newBooks);\n    });\n  }\n\n  /*  function handleSubmit(event) {\n     event.preventDefault();\n     // /*      let flag = 0;\n     //     books.forEach(\n     //       (element) => {\n     //         if (element.id === parseInt(enteredId)) {\n     //           return flag = 1;\n     //         }\n     //       }\n     //     )\n     //     if (flag === 0) {\n     //       let book = {\n     //         id: enteredId,\n     //         title: enteredTitle,\n     //         author: enteredAuthor,\n     //         price: enteredPrice\n     //       }\n     //        let newBooks = [...books]\n     //       newBooks.push(book);\n     //       setBooks(newBooks); \n     //     } \n   \n       let book = {\n       id: enteredId,\n       title: enteredTitle,\n       author: enteredAuthor,\n       price: enteredPrice\n     }\n     let flag = 0;\n     books.filter(\n       (element) => {\n         if (book.id == element.id)\n           return flag = 1;\n       }\n     )\n     if (flag == 0) {\n       fetch('http://localhost:8000/books', {\n         method: 'POST',\n         headers: {\n           'Content-Type': 'application/json'\n         },\n         body: JSON.stringify(book)\n       })\n         .then((book) => {\n             let newBooks = [...books]\n           newBooks.push(book);\n           setBooks(newBooks);\n           setEnteredId(\"\");\n           setEnteredTitle(\"\");\n           setEnteredAuthor(\"\");\n           setEnteredPrice(\"\");\n         })\n     }\n     else {\n       alert(\"Please entered another Id. This id already in used\");\n       setEnteredId(\"\");\n       }\n   } */\n\n  function handleSubmit(book) {\n    let flag = 0;\n    books.forEach(element => {\n      if (element.id === parseInt(enteredId)) {\n        return flag = 1;\n      }\n    });\n    if (flag == 0) {\n      fetch('http://localhost:8000/books', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(book)\n      }).then(() => {\n        let newBooks = [...books];\n        newBooks.push(book);\n        setBooks(newBooks);\n      }).catch(error => {\n        console.error('Error adding book:', error);\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"book-logo.png\",\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"Book Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddBook, {\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), books && books.map(element => {\n      return /*#__PURE__*/_jsxDEV(Book, {\n        id: element.id,\n        title: element.title,\n        author: element.author,\n        price: element.price,\n        handleRemove: handleRemove,\n        books: books,\n        setBooks: setBooks\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 18\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sJgqo16tCAB90nOaZEMaSqQVLqQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Book","AddBook","jsxDEV","_jsxDEV","App","_s","books","setBooks","fetch","then","response","json","data","handleRemove","id","method","newBooks","filter","element","handleSubmit","book","flag","forEach","parseInt","enteredId","headers","body","JSON","stringify","push","catch","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","title","author","price","_c","$RefreshReg$"],"sources":["E:/Aa Seven Mentor/Web Development Onkar Nagarkar/React/Book Management System/book_managment_system/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport Book from './components/Book';\nimport AddBook from './components/AddBook';\n\nfunction App() {\n\n  let [books, setBooks] = useState(null);\n\n  useEffect(() => {\n    fetch('http://localhost:8000/books')\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setBooks(data)\n      })\n  })\n\n  function handleRemove(id) {\n    fetch(`http://localhost:8000/books/${id}`, {\n      method: 'DELETE'\n    })\n      .then(() => {\n        let newBooks = books.filter(\n          (element) => {\n            return element.id !== id;\n          }\n        )\n        setBooks(newBooks);\n      })\n  }\n\n  /*  function handleSubmit(event) {\n     event.preventDefault();\n     // /*      let flag = 0;\n     //     books.forEach(\n     //       (element) => {\n     //         if (element.id === parseInt(enteredId)) {\n     //           return flag = 1;\n     //         }\n     //       }\n     //     )\n     //     if (flag === 0) {\n     //       let book = {\n     //         id: enteredId,\n     //         title: enteredTitle,\n     //         author: enteredAuthor,\n     //         price: enteredPrice\n     //       }\n     //        let newBooks = [...books]\n     //       newBooks.push(book);\n     //       setBooks(newBooks); \n     //     } \n   \n \n     let book = {\n       id: enteredId,\n       title: enteredTitle,\n       author: enteredAuthor,\n       price: enteredPrice\n     }\n     let flag = 0;\n     books.filter(\n       (element) => {\n         if (book.id == element.id)\n           return flag = 1;\n       }\n     )\n     if (flag == 0) {\n       fetch('http://localhost:8000/books', {\n         method: 'POST',\n         headers: {\n           'Content-Type': 'application/json'\n         },\n         body: JSON.stringify(book)\n       })\n         .then((book) => {\n \n           let newBooks = [...books]\n           newBooks.push(book);\n           setBooks(newBooks);\n           setEnteredId(\"\");\n           setEnteredTitle(\"\");\n           setEnteredAuthor(\"\");\n           setEnteredPrice(\"\");\n         })\n     }\n     else {\n       alert(\"Please entered another Id. This id already in used\");\n       setEnteredId(\"\");\n \n     }\n   } */\n\n  function handleSubmit(book) {\n    let flag = 0;\n    books.forEach(\n      (element) => {\n        if (element.id === parseInt(enteredId)) {\n          return flag = 1;\n        }\n      }\n    )\n\n    if (flag == 0) {\n\n\n\n      fetch('http://localhost:8000/books', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(book)\n      })\n        .then(() => {\n          let newBooks = [...books];\n          newBooks.push(book);\n          setBooks(newBooks);\n        })\n        .catch(error => {\n          console.error('Error adding book:', error);\n        });\n\n    }\n  }\n\n  return (\n    <div className='main-container'>\n      <div className='top-section'>\n        <img src=\"book-logo.png\" alt=\"Logo\" />\n        <h1 className='heading'>Book Management System</h1>\n\n      </div>\n      <AddBook handleSubmit={handleSubmit} />\n      {\n        books && books.map((element) => {\n          return <Book key={element.id} id={element.id} title={element.title} author={element.author} price={element.price} handleRemove={handleRemove} books={books} setBooks={setBooks} />\n        })\n      }\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACdL,QAAQ,CAACK,IAAI,CAAC;IAChB,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,SAASC,YAAYA,CAACC,EAAE,EAAE;IACxBN,KAAK,CAAE,+BAA8BM,EAAG,EAAC,EAAE;MACzCC,MAAM,EAAE;IACV,CAAC,CAAC,CACCN,IAAI,CAAC,MAAM;MACV,IAAIO,QAAQ,GAAGV,KAAK,CAACW,MAAM,CACxBC,OAAO,IAAK;QACX,OAAOA,OAAO,CAACJ,EAAE,KAAKA,EAAE;MAC1B,CACF,CAAC;MACDP,QAAQ,CAACS,QAAQ,CAAC;IACpB,CAAC,CAAC;EACN;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAKE,SAASG,YAAYA,CAACC,IAAI,EAAE;IAC1B,IAAIC,IAAI,GAAG,CAAC;IACZf,KAAK,CAACgB,OAAO,CACVJ,OAAO,IAAK;MACX,IAAIA,OAAO,CAACJ,EAAE,KAAKS,QAAQ,CAACC,SAAS,CAAC,EAAE;QACtC,OAAOH,IAAI,GAAG,CAAC;MACjB;IACF,CACF,CAAC;IAED,IAAIA,IAAI,IAAI,CAAC,EAAE;MAIbb,KAAK,CAAC,6BAA6B,EAAE;QACnCO,MAAM,EAAE,MAAM;QACdU,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;MAC3B,CAAC,CAAC,CACCX,IAAI,CAAC,MAAM;QACV,IAAIO,QAAQ,GAAG,CAAC,GAAGV,KAAK,CAAC;QACzBU,QAAQ,CAACa,IAAI,CAACT,IAAI,CAAC;QACnBb,QAAQ,CAACS,QAAQ,CAAC;MACpB,CAAC,CAAC,CACDc,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C,CAAC,CAAC;IAEN;EACF;EAEA,oBACE5B,OAAA;IAAK8B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B/B,OAAA;MAAK8B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B/B,OAAA;QAAKgC,GAAG,EAAC,eAAe;QAACC,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtCrC,OAAA;QAAI8B,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhD,CAAC,eACNrC,OAAA,CAACF,OAAO;MAACkB,YAAY,EAAEA;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAErClC,KAAK,IAAIA,KAAK,CAACmC,GAAG,CAAEvB,OAAO,IAAK;MAC9B,oBAAOf,OAAA,CAACH,IAAI;QAAkBc,EAAE,EAAEI,OAAO,CAACJ,EAAG;QAAC4B,KAAK,EAAExB,OAAO,CAACwB,KAAM;QAACC,MAAM,EAAEzB,OAAO,CAACyB,MAAO;QAACC,KAAK,EAAE1B,OAAO,CAAC0B,KAAM;QAAC/B,YAAY,EAAEA,YAAa;QAACP,KAAK,EAAEA,KAAM;QAACC,QAAQ,EAAEA;MAAS,GAA7JW,OAAO,CAACJ,EAAE;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqJ,CAAC;IACpL,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV;AAACnC,EAAA,CA1IQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AA4IZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}