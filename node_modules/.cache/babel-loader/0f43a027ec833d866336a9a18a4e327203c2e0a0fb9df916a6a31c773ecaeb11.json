{"ast":null,"code":"var _jsxFileName = \"E:\\\\Aa Seven Mentor\\\\Web Development Onkar Nagarkar\\\\React\\\\Book Management System\\\\book_managment_system\\\\src\\\\components\\\\Book.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './Book.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Book(props) {\n  _s();\n  let [isUpdating, setIdUpdating] = useState(false);\n  let [updatedTitle, setUpdatedTitle] = useState(props.title);\n  let [updatedAuthor, setUpdatedAuthor] = useState(props.author);\n  let [updatedPrice, setUpdatedPrice] = useState(props.price);\n  function handleTitleChnage(event) {\n    setUpdatedTitle(event.target.value);\n  }\n  function handleAuthorChnage(event) {\n    setUpdatedAuthor(event.target.value);\n  }\n  function handlePriceChnage(event) {\n    setUpdatedPrice(event.target.value);\n  }\n  function handleUpdate() {\n    let book;\n    if (isUpdating) {\n      book = {\n        id: props.id,\n        title: updatedTitle,\n        author: updatedAuthor,\n        price: updatedPrice\n      };\n      fetch(`http://localhost:8000/books/${props.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(book)\n      }).then(() => {\n        let newBooks = [...props.books];\n        newBooks.map((element, idx) => {\n          if (element.id === book.id) {\n            newBooks.splice(idx, 1, book);\n          }\n        });\n        props.setBooks(newBooks);\n        setIdUpdating(false);\n      });\n    } else {\n      setIdUpdating(true);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [\"*\", /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"container-data1\",\n      className: \"book-data\",\n      children: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }, this), isUpdating ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input-data\",\n      id: \"input-data2\",\n      value: updatedTitle,\n      onChange: handleTitleChnage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"container-data2\",\n      className: \"book-data\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 144\n    }, this), isUpdating ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input-data\",\n      id: \"input-data3\",\n      value: updatedAuthor,\n      onChange: handleAuthorChnage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"container-data3\",\n      className: \"book-data\",\n      children: props.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 146\n    }, this), isUpdating ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input-data\",\n      id: \"input-data4\",\n      value: updatedPrice,\n      onChange: handlePriceChnage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"container-data4\",\n      className: \"book-data\",\n      children: props.price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 144\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"btnRemove\",\n      onClick: () => {\n        props.handleRemove(props.id);\n      },\n      children: \"Remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"btnUpdate\",\n      onClick: handleUpdate,\n      children: isUpdating ? \"Save\" : \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), \"*/\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Book, \"Dq4WkTmjuhIXkGyrbgNCpAJ7VF8=\");\n_c = Book;\nexport default Book;\n\n/* \r\nlet book\r\n        if (isUpdating == true) {\r\n            book = {\r\n                id: props.id,\r\n                title: updatedTitle,\r\n                author: updatedAuthor,\r\n                price: updatedPrice\r\n            }\r\n            \r\n            let newBooks = [...props.books];\r\n            newBooks.map(\r\n                (element, idx) => {\r\n                    if (element.id == book.id) {\r\n                        newBooks.splice(idx, 1, book);\r\n                    }\r\n                }\r\n            )\r\n\r\n            props.setBooks(newBooks);\r\n            setIdUpdating(false)\r\n        }\r\n        else {\r\n            setIdUpdating(true)\r\n        }\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Book","props","_s","isUpdating","setIdUpdating","updatedTitle","setUpdatedTitle","title","updatedAuthor","setUpdatedAuthor","author","updatedPrice","setUpdatedPrice","price","handleTitleChnage","event","target","value","handleAuthorChnage","handlePriceChnage","handleUpdate","book","id","fetch","method","headers","body","JSON","stringify","then","newBooks","books","map","element","idx","splice","setBooks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","handleRemove","_c","$RefreshReg$"],"sources":["E:/Aa Seven Mentor/Web Development Onkar Nagarkar/React/Book Management System/book_managment_system/src/components/Book.jsx"],"sourcesContent":["import { useState } from 'react'\r\nimport './Book.css'\r\n\r\nfunction Book(props) {\r\n    let [isUpdating, setIdUpdating] = useState(false);\r\n    let [updatedTitle, setUpdatedTitle] = useState(props.title)\r\n    let [updatedAuthor, setUpdatedAuthor] = useState(props.author)\r\n    let [updatedPrice, setUpdatedPrice] = useState(props.price)\r\n\r\n    function handleTitleChnage(event) {\r\n        setUpdatedTitle(event.target.value)\r\n    }\r\n    function handleAuthorChnage(event) {\r\n        setUpdatedAuthor(event.target.value)\r\n    }\r\n    function handlePriceChnage(event) {\r\n        setUpdatedPrice(event.target.value)\r\n    }\r\n\r\n    function handleUpdate() {\r\n        let book\r\n        if (isUpdating) {\r\n            book = {\r\n                id: props.id,\r\n                title: updatedTitle,\r\n                author: updatedAuthor,\r\n                price: updatedPrice\r\n            }\r\n            fetch(`http://localhost:8000/books/${props.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(book)\r\n            })\r\n                .then(() => {\r\n                    let newBooks = [...props.books];\r\n                    newBooks.map(\r\n                        (element, idx) => {\r\n                            if (element.id === book.id) {\r\n                                newBooks.splice(idx, 1, book);\r\n                            }\r\n                        }\r\n                    )\r\n\r\n                    props.setBooks(newBooks);\r\n                    setIdUpdating(false);\r\n                })\r\n        }\r\n        else {\r\n            setIdUpdating(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n           *\r\n  <span id='container-data1' className=\"book-data\">{props.id}</span> \r\n            {\r\n                isUpdating ? <input type=\"text\" className=\"input-data\" id='input-data2' value={updatedTitle} onChange={handleTitleChnage} /> : <span id='container-data2' className=\"book-data\">{props.title}</span>\r\n            } \r\n            {\r\n                isUpdating ? <input type=\"text\" className=\"input-data\" id='input-data3' value={updatedAuthor} onChange={handleAuthorChnage} /> : <span id='container-data3' className=\"book-data\">{props.author}</span>\r\n            }\r\n            {\r\n                isUpdating ? <input type=\"text\" className=\"input-data\" id='input-data4' value={updatedPrice} onChange={handlePriceChnage} /> : <span id='container-data4' className=\"book-data\">{props.price}</span>\r\n            }\r\n\r\n\r\n            <button id='btnRemove' onClick={() => { props.handleRemove(props.id) }}>Remove</button>\r\n            <button id='btnUpdate' onClick={handleUpdate}>\r\n                {\r\n                    isUpdating ? \"Save\" : \"Update\"\r\n                }\r\n            </button>\r\n*/\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Book;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* \r\nlet book\r\n        if (isUpdating == true) {\r\n            book = {\r\n                id: props.id,\r\n                title: updatedTitle,\r\n                author: updatedAuthor,\r\n                price: updatedPrice\r\n            }\r\n            \r\n            let newBooks = [...props.books];\r\n            newBooks.map(\r\n                (element, idx) => {\r\n                    if (element.id == book.id) {\r\n                        newBooks.splice(idx, 1, book);\r\n                    }\r\n                }\r\n            )\r\n\r\n            props.setBooks(newBooks);\r\n            setIdUpdating(false)\r\n        }\r\n        else {\r\n            setIdUpdating(true)\r\n        }\r\n*/\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}